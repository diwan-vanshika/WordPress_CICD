name: WordPress CI/CD Deployment

on:
  push:
    branches:
      - main
    paths:
      - 'terraform/**'
      - 'ansible/**'
  workflow_dispatch:  # Allow manual triggering

jobs:
  terraform-deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: '1.1.7'
      
      - name: Configure AWS Credentials for Terraform
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      
      - name: Terraform Init
        run: terraform init
        working-directory: ./terraform
      
      - name: Terraform Apply
        run: terraform apply -auto-approve
        working-directory: ./terraform

  ansible-configure:
    needs: terraform-deploy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.9'
      
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install ansible boto3 botocore
      
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      
      - name: Set up SSH Key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_SSH_PRIVATE_KEY }}" > ~/.ssh/wordpress-key
          chmod 600 ~/.ssh/wordpress-key
          ssh-keygen -l -f ~/.ssh/wordpress-key
      
      - name: Fetch EC2 Instance IP
        run: |
          EC2_IP=$(aws ec2 describe-instances --filters "Name=tag:Name,Values=WordPress-Server" --query "Reservations[0].Instances[0].PublicIpAddress" --output text)
          echo "EC2_IP=$EC2_IP" >> $GITHUB_ENV
          ssh-keyscan -H $EC2_IP >> ~/.ssh/known_hosts
      
      - name: Update Ansible Inventory
        run: |
          mkdir -p ansible/inventory
          cat > ansible/inventory/hosts << EOF
          [wordpress_servers]
          ${{ env.EC2_IP }} ansible_user=ec2-user ansible_ssh_private_key_file=~/.ssh/wordpress-key ansible_python_interpreter=/usr/bin/python3
          EOF
          cat ansible/inventory/hosts
      
      - name: Verify SSH Connection
        run: |
          ssh -vvv -i ~/.ssh/wordpress-key -o StrictHostKeyChecking=no ec2-user@${{ env.EC2_IP }} 'echo "SSH connection successful"' || echo "SSH connection failed"
      
      - name: Run Ansible Playbook
        run: |
          ansible-playbook -vvv \
          -i ansible/inventory/hosts \
          ansible/playbooks/wordpress-setup.yaml \
          -e ansible_ssh_common_args='-o StrictHostKeyChecking=no' \
          --private-key=~/.ssh/wordpress-key
        env:
          ANSIBLE_HOST_KEY_CHECKING: 'False'